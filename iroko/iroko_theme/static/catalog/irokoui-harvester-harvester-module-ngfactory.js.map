{"version":3,"sources":["webpack:///./src/irokoui/harvester/harvester-filters/harvester-filters.component.html","webpack:///./src/irokoui/harvester/harvester-filters/harvester-filters.component.ts","webpack:///./src/irokoui/harvester/harvester-routing.module.ts","webpack:///./src/irokoui/harvester/harvester.module.ts","webpack:///./src/irokoui/harvester/harvester.service.ts","webpack:///./src/irokoui/harvester/harvester/harvester.component.html","webpack:///./src/irokoui/harvester/harvester/harvester.component.ts","webpack:///./src/irokoui/harvester/repositories/repositories.component.html","webpack:///./src/irokoui/harvester/repositories/repositories.component.ts","webpack:///./src/irokoui/harvester/repository/repository.component.html","webpack:///./src/irokoui/harvester/repository/repository.component.ts"],"names":[],"mappings":"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","file":"irokoui-harvester-harvester-module-ngfactory.js","sourcesContent":["<!-- <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\" fxLayoutGap=\"1em\" fxLayoutGap.xs=\"0\"> -->\n\n  <ng-template toco-Filter></ng-template>\n\n<!-- </div> -->\n\n<button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>add</mat-icon>\n</button>\n  <mat-menu #menu=\"matMenu\" >\n    <ng-container *ngFor=\"let item of filters_data,let i=index\">\n        <ng-container *ngIf=\"item.is_enabled\">\n          <button mat-menu-item (click)=\"addFilter(i)\">\n            {{item.name}}\n          </button>\n        </ng-container>\n    </ng-container>\n    \n\n    \n  </mat-menu>","import { Component, OnInit, ComponentFactoryResolver, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FilterComponent } from '../../filters/filter.component';\nimport { FilterItem } from '../../filters/filter-item';\nimport { BooleanFilterComponent } from '../../filters/boolean-filter/boolean-filter.component';\nimport { CatalogService } from '../../catalog/catalog.service';\nimport { FilterContainerService } from '../../filters/filter-container.service';\nimport { FilterContainerComponent } from '../../filters/filter-container/filter-container.component';\nimport { FilterDirective } from '../../filters/filter.directive';\n\n\n@Component({\n  selector: 'toco-harvester-filters-container',\n  templateUrl: './harvester-filters.component.html',\n  styleUrls: ['./harvester-filters.component.scss']\n})\nexport class HarvesterFiltersComponent extends FilterContainerComponent{\n\n  \n  constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n              protected childrenService: FilterContainerService,\n              protected service:  CatalogService,) { \n                super(componentFactoryResolver, childrenService)\n              }\n\n  ngOnInit() {\n    super.ngOnInit()\n\n    default_filters.forEach(filter =>{\n      this.filters_data.push(filter);\n    });\n\n    this.service.getJournalsVocab().subscribe(response =>{\n      response.data.vocabularies.forEach(vocab =>{ \n        this.service.getTerminosByVocab(vocab.name+'/any').subscribe(termsResponse =>{\n          this.filters_data.push(\n          {\n            index: this.filters_data.length,\n            field: 'terms',\n            type: 'select-autocomplete',\n            placeholder: vocab.name,\n            name: vocab.name,\n            idVocab: vocab.id,\n            selectOptions: termsResponse.data.terms,\n            is_enabled: true\n          }   \n        );\n        });\n      });\n    });\n  }\n}\n\nconst default_filters =\n  [\n    {\n      index: 0,\n      field: 'title',\n      type: 'search',\n      placeholder: 'Título',\n      name: 'Título',\n      is_enabled: true\n    }\n  ];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HarvesterComponent } from './harvester/harvester.component';\nimport { RepositoriesComponent } from './repositories/repositories.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: HarvesterComponent,\n  children: [\n    {\n      path: '',\n      component: RepositoriesComponent,\n      data: {\n        title: 'Revistas'\n      }\n    }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HarvesterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HarvesterRoutingModule } from './harvester-routing.module';\nimport { RepositoriesComponent } from './repositories/repositories.component';\nimport { HarvesterComponent } from './harvester/harvester.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FiltersService } from '../filters/filters.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FilterContainerService } from '../filters/filter-container.service';\nimport { HarvesterService } from './harvester.service';\nimport { FiltersModule } from '../filters/filters.module';\nimport { CatalogModule } from '../catalog/catalog.module'\nimport { HarvesterFiltersComponent } from './harvester-filters/harvester-filters.component';\nimport { CatalogService } from '../catalog/catalog.service';\nimport { FilterDirective } from '../filters/filter.directive';\nimport { RepositoryComponent } from './repository/repository.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    HarvesterRoutingModule, \n    SharedModule,\n    ReactiveFormsModule, \n    FiltersModule\n  ],\n  declarations: [\n    RepositoriesComponent, \n    RepositoryComponent,\n    HarvesterComponent, \n    HarvesterFiltersComponent,\n  ],\n  providers: [\n    CatalogService,\n    HarvesterService\n    // FiltersService, \n    // FilterContainerService\n  ]\n})\nexport class HarvesterModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Observable, Observer} from \"rxjs\";\nimport { Response } from \"../entities/response\";\nimport { Journal, JournalInformation, ISSN } from '../entities/journal.entity';\nimport { environment } from '../../environments/environment';\nimport { Entity } from '../entities/entity';\nimport { FilterHttpMap } from '../filters/filter-item';\n@Injectable()\nexport class HarvesterService {\n\n  constructor(private http: HttpClient) { }\n\n}","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'toco-harvester',\n  templateUrl: './harvester.component.html',\n  styleUrls: ['./harvester.component.scss']\n})\nexport class HarvesterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div fxLayout=\"{{currentlayout.layout}}\" fxLayout.xs=\"column nowrap\" fxLayoutAlign=\"{{currentlayout.aling}}\">\n  <button mat-raised-button (click)=\"currentJournals()\">Print Current Fournals</button>\n  <button mat-raised-button (click)=\"currentJournals()\">Print Current Fournals</button>\n  <button mat-raised-button (click)=\"currentJournals()\">Print Current Fournals</button>\n</div>\n\n\n<div fxLayout=\"{{currentlayout.layout}}\" fxLayout.xs=\"column nowrap\" fxLayoutAlign=\"{{currentlayout.aling}}\">\n  \n  <toco-harvester-filters-container fxLayout=\"row wrap\" fxLayout.xs=\"column wrap\" fxFlex=\"{{currentlayout.width}}\" fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\"\n    fxLayoutGap=\"1em\" class=\"width-90 back-grey mat-elevation-z8\">\n  </toco-harvester-filters-container>\n\n  <div class=\"mat-elevation-z8 width-90 margin1em\">\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef>Titulo</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.jinformation.title}} </td>\n      </ng-container>\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n          <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <toco-harvester-repository\n              [repostitory]=\"element\"></toco-harvester-repository>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\" [class.example-expanded-row]=\"expandedElement === element\"\n        (click)=\"expandedElement = element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n    </table>\n    <mat-paginator [length]=\"length\"\n          [pageSize]=\"pageSize\"\n          [pageSizeOptions]=\"pageSizeOptions\"\n          (page)=\"fetchJournalData()\">\n    </mat-paginator>\n  </div>\n  \n  <mat-card *ngIf=\"!isEmpty()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n    <mat-spinner></mat-spinner>\n    <!--<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>-->\n  </mat-card>\n\n  <!-- <mat-card *ngIf=\"isEmpty()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n    <h1>No hay Información para Mostrar</h1>\n  </mat-card> -->\n</div>\n  \n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Journal, JournalInformation, ISSN } from '../../entities/journal.entity';\nimport { MatSnackBar, PageEvent } from '@angular/material';\nimport { MetadataService } from '../../core/metadata.service';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport { startWith, switchMap, map, catchError } from 'rxjs/operators';\nimport { FilterContainerComponent } from '../../filters/filter-container/filter-container.component';\nimport { FiltersService } from '../../filters/filters.service';\nimport { FilterHttpMap } from '../../filters/filter-item';\nimport { environment } from '../../../environments/environment'\n'../../environments/environment';\nimport { Repository } from '../../../irokoui/entities/repository.entity';\nimport { HarvesterService } from '../harvester.service';\nimport { CatalogService } from '../../catalog/catalog.service';\nimport { HarvesterFiltersComponent } from '../harvester-filters/harvester-filters.component';\n\n\n@Component({\n  selector: 'toco-repositories',\n  templateUrl: './repositories.component.html',\n  styleUrls: ['./repositories.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class RepositoriesComponent implements OnInit {\n\n\n  journalList: Journal[] = [];\n  private loading: boolean = true;\n  dataSource = new MatTableDataSource<Journal>();\n  columnsToDisplay = ['title'];\n  expandedElement: Journal;\n  length = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 20, 40, 60, 80, 100];\n  pageEvent: PageEvent;\n  params: Array<FilterHttpMap>;\n\n  irokoHost = environment.irokoHost + \"/catalog\";\n  currentlayout = {\n    name: 'Izquierda',\n    layout: 'row',\n    aling: 'center baseline',\n    width:  '22'\n  }\n\n\n  constructor(private service: CatalogService, \n              private metadata: MetadataService, \n              private filterService : FiltersService) { }\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(HarvesterFiltersComponent) filter_component : HarvesterFiltersComponent;\n  \n  ngOnInit() {\n    \n    this.metadata.setTitleDescription(\"Catálogo de Revistas Científicas\", \"\");\n    this.paginator.firstPage();\n    this.paginator.pageSize = this.pageSize;\n    this.service.getJournalsCount().subscribe(response =>{\n      this.length = response.data.count;\n    });\n    this.fetchJournalData();\n    \n    this.filterService.paramsChanged.subscribe(params =>{\n      this.params = params;\n      this.fetchJournalData();\n    })\n  \n  }\n\n  // onPaginatorChanged(){\n  //   this.filterService.changeFilter('count',this.paginator.pageSize, false);\n  //   this.filterService.changeFilter('page',this.paginator.pageIndex);\n  // }\n\n  fetchJournalData() {\n    this.loading = true;\n    //this.dataSource.data = this.service.getJournalsPage(this.count, this.page);\n    let arr = new Array<Journal>();\n    merge().pipe(\n      startWith({}),\n      switchMap(() => {\n        this.loading = true;\n        return this.service!.getJournalsPage(this.paginator.pageSize, this.paginator.pageIndex, this.params);\n      }),\n      map(response => {\n        // Flip flag to show that loading has finished.\n        this.loading = false;\n        // this.isRateLimitReached = false;\n        // this.resultsLength = response.total_count;\n        this.length = response.data.sources.count\n        response.data.sources.data.forEach(item =>{\n          let j = new Journal(0,0);\n          j.id = item.id;\n          j.tocoID = item.uuid;\n          j.source_type = item.source_type;\n          j.harvest_type = item.harvest_type;\n          j.harvest_endpoint = item.harvest_endpoint;\n          \n          \n            let info = new JournalInformation();\n            info.url = item.data!= null ? item.data.url: \"\";\n            info.title = item.name;\n            info.subtitle = item.subtitle;\n            info.shortname  = item.shortname;\n              let issn = new ISSN();\n              issn.e = item.data!= null ? item.data.issn.e : \"\";\n              issn.l = item.data!= null ? item.data.issn.l : \"\";\n              issn.p = item.data!= null ? item.data.issn.p : \"\";\n            info.issn = issn;\n            info.rnps = item.data!= null ? item.data.rnps : \"\";\n            info.logo = item.data!= null ? item.data.logo : \"\";\n            info.purpose  = item.purpose;\n            info.description  = item.data!= null ? item.data.description : \"\";\n          j.jinformation = info;\n          arr.push(j);\n        });\n        return arr;\n      }),\n      catchError(error => {\n        this.loading = false;\n        console.log(\"ERRORRR  \"+error)\n        // Catch if the GitHub API has reached its rate limit. Return empty data.\n        // this.isRateLimitReached = true;\n        return observableOf([]);\n      })\n    ).subscribe(data => this.dataSource.data = data);\n\n  }\n\n  onScrollUp() {\n    // console.log(\"scrolled up!!\");\n  }\n  isEmpty() {\n    if (this.journalList.length == 0) {\n      this.loading = false;\n      return true;\n    }\n    return false;\n  }\n  isLoading() {\n    return this.loading;\n  }\n  currentJournals(){\n    console.log(this.dataSource.data)\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>\n            <strong>\n            {{repostitory.source_type}} {{repostitory.harvest_type}}\n            </strong>\n        </mat-card-title>\n        <mat-card-subtitle>\n        {{repostitory.harvest_endpoint}}\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n            Informacion sobre el estado, la cantidad de elementos etc...\n    </mat-card-content>\n    <mat-card-actions>\n        \n        <button mat-fab-button (click)=\"onIdentify()\">Identify</button>\n        <button mat-fab-button (click)=\"onHarvest()\">Harvest</button>\n        <button mat-fab-button (click)=\"onRecord()\">Record</button>\n    </mat-card-actions>\n      \n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { Journal } from '../../entities/journal.entity';\n\n@Component({\n  selector: 'toco-harvester-repository',\n  templateUrl: './repository.component.html',\n  styleUrls: ['./repository.component.scss']\n})\nexport class RepositoryComponent implements OnInit {\n\n  @Input() repostitory: Journal ;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n  onIdentify(){\n    console.log('onIdentify'+this.repostitory.id)\n  }\n  onHarvest(){\n    console.log('onHarvest'+this.repostitory.id)\n  }\n  onRecord(){\n    console.log('onRecord'+this.repostitory.id)\n  }\n}\n"],"sourceRoot":""}