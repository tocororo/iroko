{"version":3,"sources":["webpack:///./src/irokoui/pages/page-view/page-view.component.html","webpack:///./src/irokoui/pages/page-view/page-view.component.ts","webpack:///./src/irokoui/pages/page.resolver.ts","webpack:///./src/irokoui/pages/pages-routing.module.ts","webpack:///./src/irokoui/pages/pages.module.ts","webpack:///./src/irokoui/pages/pages.service.ts","webpack:///./src/irokoui/pages/pages/pages.component.html","webpack:///./src/irokoui/pages/pages/pages.component.ts"],"names":[],"mappings":"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","file":"pages-pages-module-ngfactory.js","sourcesContent":["\n<div class=\"container\" *ngIf=\"page\">\n    <div class=\"page-title\">\n        <h1 class=\"mat-h1\">{{page.title[0].value}}</h1>   \n    </div>\n    <div> \n        <div class=\"e2e-inner-html-bound  text-align-justify\" [innerHTML]=\"page.body[0].value\"> </div>\n\n    </div>\n         \n\n</div>\n\n\n","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MetadataService } from '../../core/metadata.service';\n\n@Component({\n  selector: 'toco-page-view',\n  templateUrl: './page-view.component.html',\n  styleUrls: ['./page-view.component.scss']\n})\nexport class PageViewComponent implements OnInit, OnChanges {\n  \n  page:  Observable<any>;\n  loading = true;\n  \n  constructor(\n    private route: ActivatedRoute,\n    private metadata: MetadataService\n  ) { }\n\n  ngOnInit() {\n    this.route.data\n    .subscribe((data: { page: any }) => {\n      this.loading = false;\n      this.page = data.page;\n      this.ngOnChanges();\n    });\n  }\n  ngOnChanges(){\n    this.metadata.setTitleMetadataDrupal(this.page);\n  }\n\n}\n","import { Injectable }             from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot,\n         ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable }             from 'rxjs';\nimport { map, take }              from 'rxjs/operators';\n\nimport { PagesService } from './pages.service';\n\n\n@Injectable()\nexport class PageResolver implements Resolve<any> {\n  constructor(private service: PagesService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n    let slug = route.paramMap.get('slug');\n    console.log(slug);\n    return this.service.getPageBySlug(slug).pipe(\n      take(1),\n      map(node => {\n        if (node) {\n          console.log(node);\n          return node;\n        } else { // id not found\n          this.router.navigate(['/']);\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PagesComponent } from './pages/pages.component';\nimport { PageViewComponent } from './page-view/page-view.component';\nimport { PageResolver } from './page.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PagesComponent,\n    children: [\n      {\n        path: ':slug',\n        component: PageViewComponent,\n        resolve: {\n          page: PageResolver\n        }\n\n      }\n    ]\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    PageResolver\n  ]\n})\nexport class PagesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { PagesComponent } from './pages/pages.component';\nimport { PageViewComponent } from './page-view/page-view.component';\nimport { PagesService } from './pages.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PagesRoutingModule\n  ],\n  declarations: [PagesComponent, PageViewComponent],\n  providers: [\n    PagesService\n  ]\n})\nexport class PagesModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Observable, Observer} from \"rxjs\";\nimport { Response } from \"../entities/response\";\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class PagesService {\n\n  constructor(private http: HttpClient) { }\n\n  getPageBySlug(slug: string):Observable<Response<any>>{    \n    let params = new HttpParams();    \n    let options = { \n      params: params.set('_format', 'json')\n    };\n    return this.http.get<any>(environment.apisEndpoints.pages+'/'+slug,options);    \n  }\n\n\n}","<p>\n  pages works!\n</p>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'toco-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}